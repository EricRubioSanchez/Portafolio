<header
    class="xl:my-auto top-0 xl:h-full w-full xl:w-auto mx-auto mt-2 fixed flex items-center py-4 px-4 xl:pl-40 z-10 justify-center xl:justify-start"
>
    <div class="flex items-center">
        <span style="border-radius: 1rem;" class="circuloVerde relative inline-flex overflow-hidden  p-[1px]">
            <span
                class="  absolute  inset-[-1000%] animate-[spin_2s_linear_infinite] bg-[conic-gradient(from_90deg_at_50%_50%,#e1672d_0%,#552712_50%,#e1672d_100%)]  "
            ></span>
            <nav
                class="flex flex-row xl:flex-col gap-2 lg:gap-8 xl:gap-10  text-center items-center justify-center w-full px-3 py-1 dark:text-white/80 backdrop-blur-3xl "
            >
               
                    <a
                        aria-label="Estudios"
                        class="relative block xl:px-2 xl:py-2 font-semibold transition hover:text-orange-500 dark:hover:text-orange-500"
                        href="#Estudios">Estudios</a
                    >
                    <a
                        aria-label="Proyectos"
                        class="relative block xl:px-2 xl:py-2 font-semibold transition hover:text-orange-500 dark:hover:text-orange-500"
                        href="#Proyectos">Proyectos</a
                    >
                    <a
                        aria-label="Experiencia"
                        class="relative block xl:px-2 xl:py-2 font-semibold transition hover:text-orange-500 dark:hover:text-orange-500"
                        href="#Experiencia">Experiencia</a
                    >
                </nav>
            
        </span>
    </div>
</header>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const header = document.querySelector("header");
        const circuloVerde = document.querySelector<HTMLElement>(".circuloVerde");
        const sections = document.querySelectorAll("section");
        const navItems = document.querySelectorAll("header nav a");

        // IntersectionObserver (igual que antes)
        const callback = (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    navItems.forEach((item) => {
                        if (item.getAttribute("aria-label") === entry.target.id) {
                            item.classList.add("text-orange-500");
                        } else {
                            item.classList.remove("text-orange-500");
                        }
                    });
                }
            });
        };
        const observer = new IntersectionObserver(callback, { root: null, rootMargin: "0px", threshold: 0.3 });
        sections.forEach((section) => observer.observe(section));

        // Añadir/remover clase 'scrolled' según scroll
        const onScroll = () => {
            if (!header || !circuloVerde) return;
            if (window.scrollY > 80) {
                // set duration for "activar" primero, luego añadir clase
                circuloVerde.style.setProperty('--circle-duration', '50ms'); // activar rápido
                header.classList.add("scrolled");
                circuloVerde.classList.add("scrolled");
            } else {
                // set duration for "desactivar" primero, luego quitar clase
                circuloVerde.style.setProperty('--circle-duration', '800ms'); // desactivar lento
                header.classList.remove("scrolled");
                circuloVerde.classList.remove("scrolled");
            }
        };
        onScroll();
        window.addEventListener("scroll", onScroll, { passive: true });

        // Visibility handling
        document.addEventListener("visibilitychange", () => {
            if (document.visibilityState === "hidden") {
                observer.disconnect();
            } else {
                sections.forEach((section) => observer.observe(section));
            }
        });
    });
</script>
<style>
    header { pointer-events: none; }
  header nav, header a, .circuloVerde { pointer-events: auto; }
    /* variable por defecto, se sobrescribe desde JS antes del toggle */
    .circuloVerde span {
        --circle-duration: 100ms;
        opacity: 0;
        transition: all var(--circle-duration) linear;
    }

    .circuloVerde.scrolled span {
        opacity: 1;
    }

    /* resto de estilos (igual que tienes) */
    header {
        transition:
            background-color 200ms ease,
            box-shadow 200ms ease,
            backdrop-filter 200ms ease,
            border-color 200ms ease;
    }

    nav {
        background-color: rgba(255,255,255,0);
        display: flex;
        border: 1px solid transparent;
        transition:
            background-color 200ms ease,
            box-shadow 200ms ease,
            backdrop-filter 200ms ease,
            border-color 200ms ease;
        padding: 0.5rem 1rem;
        border-radius: 1rem;
    }

    header.scrolled nav {
        background-color: rgb(0, 0, 0);
        backdrop-filter: blur(6px);
        box-shadow:
            0 10px 15px -3px rgba(0, 0, 0, 0.1),
            0 4px 6px -2px rgba(0, 0, 0, 0.05);
        border-color: rgba(0, 0, 0, 0.04);
    }

    .dark nav { background-color: rgba(17,24,39,0); border: 1px solid transparent; }
</style>